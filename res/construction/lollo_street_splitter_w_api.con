local constants = require('lollo_street_tuning.constants')

function data()
    return {
        type = 'STREET_CONSTRUCTION',
        description = {
            name = _('Smart street splitter'),
            description = _(
                'Automatically splits a street in two sections. Place different types of streets or roads between and outside splits, to route road vehicles on different lanes.'
            )
        },
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        order = 1102,
        autoRemovable = true,
        skipCollision = true,
        updateFn = function(params)
            -- print('lollo street splitter updateFn') debugPrint(params)
            local result = {}
            result.colliders = {}
            result.cost = 0
            result.edgeLists = {}
            result.models = {
                {
                    id = 'lollo_assets/icon/pointer.mdl',
                    autoRemovable = true,
                    skipCollision = true,
                    transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, constants.splitterZShift, 1}
                }
            }
            --		result.h0 = {}
            --		result.h1 = {}
            -- LOLLO NOTE this thing with the empty faces is required , otherwise the game will make its own alignments, with spikes and all on bridges or tunnels.
            result.terrainAlignmentLists = { { type = "EQUAL", optional = true, faces =  { } } }

            local faces = { }
            local radius = 20
            local wedgeCount = 10
            for i = 1, wedgeCount do
                local theta = 2 * math.pi / wedgeCount * i
                faces[#faces+1] = { radius * math.cos(theta), radius * math.sin(theta), 0 }
            end
            faces = { faces }

            result.groundFaces = { -- the ground faces ignore z, the alignment lists don't
                {
                    face = faces[1],
                    loop = true,
                    modes = {
                        {
                            key = 'hole.lua',
                            type = 'FILL',
                        },
                    }
                }
            }

            return result
        end,
        upgradeFn = function(_)
            return {}
        end
    }
end
