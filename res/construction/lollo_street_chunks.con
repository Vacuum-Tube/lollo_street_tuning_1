local luadump = require('lollo_street_tuning/luadump')
local debugger = require('debugger')
-- local inspect = require('inspect')
-- LOLLO NOTE we free all edges, so they can be converted freely. We couls also make a lot of combinations and upgrade them with the construction params, but that might look messy inm the end.
-- local pitchUtil = require('lollo_street_tuning/lolloPitchHelpers')
-- local streetChunksHelper = require('lollo_street_tuning/lolloStreetChunksHelper')
-- local streetUtils = require('lollo_street_tuning/lolloStreetUtils')
function data()
    return {
        type = 'STREET_CONSTRUCTION',
        description = {
            name = _('Street chunks'),
            description = _('Lays chunks of street, single or multiple in parallel. Use O and P to adjust the pitch.')
        },
        availability = {
            yearFrom = -1, --1925,
            yearTo = -1
        },
        -- params = streetChunksHelper.getParams(),
        order = 1240,
        -- collider = {
        --     type = 'NONE'
        -- },
        -- autoRemovable = true,
        skipCollision = true,
        --skipCollisionCheck = true,
        --[[ preProcessFn = function(one, two, three) -- useless
            print('LOLLO preProcessFn')
            debugPrint(one)
            debugPrint(two)
            debugPrint(three)
        end,
        updateFn = function(params)
            local pitchAdjusted = pitchUtil.adjustParamsPitch(params)
            local streetData = streetUtils.getGlobalStreetData()[params.streetType_ + 1]

            local result = { cost = 0 }
            result.groundFaces = {}
            -- result.colliders = {}
            -- LOLLO NOTE If some edges are not free, I will need a dummy model,
            -- otherwise the game will say "hello there" or "easter egg" or other rubbish,
            -- then point away (to some animal) and do nothing,
            -- when the user clicks on a done construction to configure it.
            result.models = {
                {
                    id = 'lollo_assets/lollo_dummy.mdl',
                    skipCollision = true,
                    transf = pitchUtil.getIdTransfPitched(params.pitch)
                }
            }

            -- LOLLO NOTE I cannot use KEEP here
            local tramTrackType = params.tramTrack and (({'NO', 'YES', 'ELECTRIC'})[params.tramTrack + 1]) or 'NO'
            -- LOLLO NOTE here, we have 2 half edges for every chunk of road. The inner nodes do not snap, the outer ones do.
            -- This is required if we want to make them snappable at all, to avoid crashes.
            -- We free all edges, so they can be freely converted to whatever one needs.
            -- We could make a lot of combinations and upgrade them with the construction params instead, but that would be a mess to use.
            result.edgeLists = streetChunksHelper.getSnapEdgeLists(params, pitchAdjusted, streetData, tramTrackType)

            -- print('LOLLO edgeLists = ')
            -- luadump(true)(result.edgeLists)
            -- LOLLO TODO copying from the groundTextureBuilder, we could make the terrain flat to ease the pain when building junctions
            -- if params.terrainAlignment == 1 then
            --     result.terrainAlignmentLists = { { type = "EQUAL", faces =  { } } }
            -- end

            return result
        end,
        upgradeFn = function(_)
            -- LOLLO NOTE the game wants this function to be defined, even if it returns an empty table.
            -- If you leave it out, adding and removing tram tracks won't work.
            -- (Bus lanes don't work anyway.)
            return {}
        end ]]
    }
end
