local pitchHelper = require('lollo_street_tuning/pitchHelper')
local streetChunksHelper = require('lollo_street_tuning/lolloStreetChunksHelper')
local debugger = require('debugger')

function data()
    return {
        updateFn = function(params, two)
            local result = { cost = 0 }
            result.groundFaces = {}
            -- result.colliders = {}
            -- LOLLO NOTE If some edges are not free, I will need a dummy model,
            -- otherwise the game will say "hello there" or "easter egg" or other rubbish,
            -- then point away (to some animal) and do nothing,
            -- when the user clicks on a done construction to configure it.
            local _pitchAngle = pitchHelper.getPitchAngle(params)
            result.models = {
                {
                    id = 'lollo_assets/lollo_dummy.mdl',
                    skipCollision = true,
                    transf = pitchHelper.getIdTransfPitched(_pitchAngle)
                }
            }
            -- LOLLO NOTE I cannot use KEEP here
            local tramTrackType = params.tramTrack_ and (({'NO', 'YES', 'ELECTRIC'})[params.tramTrack_ + 1]) or 'NO'
            -- LOLLO NOTE here, we have 2 half edges for every chunk of road. The inner nodes do not snap, the outer ones do.
            -- This is required if we want to make them snappable at all, to avoid crashes.
            -- We free all edges, so they can be freely converted to whatever one needs.
            -- We could make a lot of combinations and upgrade them with the construction params instead, but that would be a mess to use.
            
            -- local streetData = streetUtils.getGlobalStreetData()[params.streetType_ + 1] -- this calls the api, which is not available here!
            result.edgeLists = streetChunksHelper.getStreetChunksSnapEdgeLists(
                params,
                _pitchAngle,
                two.globalStreetData[params.streetType_ + 1],
                tramTrackType
            )
            -- LOLLO TODO copying from the groundTextureBuilder, we could make the terrain flat to ease the pain when building junctions
            -- if params.terrainAlignment == 1 then
            --     result.terrainAlignmentLists = { { type = "EQUAL", faces =  { } } }
            -- end

            return result
        end,
        getModelsFn = function(variant, closureParams)
            print('LOLLO getModelsFn') -- never fires
            debugPrint(variant)
            debugPrint(closureParams)
            return {}
        end,
        preProcessFn = function(one, two, three)
            print('LOLLO preProcessFn') -- never fires
            debugger()
            debugPrint(one)
            debugPrint(two)
            debugPrint(three)
        end,
        upgradeFn = function(_)
            print('LOLLO upgradeFn') -- never fires
            debugger()
            -- LOLLO NOTE the game wants this function to be defined, even if it returns an empty table.
            -- If you leave it out, adding and removing tram tracks won't work.
            -- (Bus lanes don't work anyway.)
            return {}
        end,
        createTemplateFn = function(one, two, three)
            print('LOLLO createTemplateFn') -- never fires
            debugger()
            debugPrint(one)
            debugPrint(two)
            debugPrint(three)
        end,
    }
end