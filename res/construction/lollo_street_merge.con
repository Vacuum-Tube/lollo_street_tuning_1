local pitchHelper = require('lollo_street_tuning.pitchHelper')
-- LOLLO TODO see if you can ease the pain when reconfiguring an existing merger. maybe skip collisions? It is not enough.

function data()
    return {
        type = 'STREET_CONSTRUCTION',
        description = {
            name = _('Street merging'),
            description = _('Merges multiple streets and a single broader street. Use O and P to adjust the pitch while building and the slider when upgrading.')
        },
        availability = {
            yearFrom = -1, --1925,
            yearTo = -1 --0
        },
        order = 1241,
        params = {
            {
                key = 'mergingType',
                name = _('Street merge type'),
                values = {
                    '↑  ↑   -   ↑↑', -- 0
                    '↑    ↑   -   ↑↑', -- 1
                    '↓  ↑   -   ↓↑', -- 2
                    '↓    ↑   -   ↓↑', -- 3
                    '↑  ↑  ↑   -   ↑↑↑', -- 4
                    -- '↑    ↑    ↑   -   ↑↑↑', -- 5
                    '↑  ↑  ↑  ↑   -   ↑↑↑↑', -- 5
                    '↓  ↓  ↑  ↑   -   ↓↓↑↑', -- 6
                    '↓  ↓  ↑  ↑   -   ↓ ↓ ↑ ↑', -- 7
                    '↓↓   ↑↑   -   ↓ ↓ ↓ ↑ ↑ ↑', -- 8
                    '↓↓↓   ↑↑↑   -   ↓ ↓ ↓ ↑ ↑ ↑', -- 9
                    'M ↓↓↓   ↑↑↑   -   ↓ ↓ ↓ ↑ ↑ ↑', -- 10
                    'M ↓↓   ↑↑   -   ↓ ↓ ↓ ↑ ↑ ↑', -- 11
                    'M ↓↓   ↑↑   -   ↓ ↓ ↑ ↑', -- 12
                    'M ↑  ↑  ↑   -   ↑↑↑', -- 13
                    'M ↑  ↑   -   ↑↑', -- 14
                    'M ↓  ↑   -   ↓↑', -- 15
                },
                defaultIndex = 0
            },
            {
                key = 'direction4Merge',
                name = _('Direction (only one-way roads)'),
                values = {
                    _('↑'),
                    _('↓')
                },
                defaultIndex = 0
            },
            -- {
            --     key = 'snapNodes_',
            --     name = _('Snap to neighbours'),
            --     values = {
            --         _('No'),
            --         _('Yes')
            --     },
            --     defaultIndex = 0
            -- },
            {
                key = 'snapNodes_', -- do not rename this param or chenga its values
                name = _('snapNodesName'),
                tooltip = _('snapNodesDesc'),
                values = {
                    _('No'),
                    _('Left'),
                    _('Right'),
                    _('Both')
                },
                defaultIndex = 3
            },
            {
                key = 'tramTrack_',
                name = _('Tram track type'),
                values = {
                    -- must be in this sequence
                    _('NO'),
                    _('YES'),
                    _('ELECTRIC')
                },
                defaultIndex = 2
            },
            -- {
            --     key = 'hasBus',
            --     name = _('Bus lane'),
            --     values = {
            --         _('No'),
            --         _('Yes')
            --     },
            --     defaultIndex = 0
            -- },
            {
                key = 'pitch4Merge',
                name = _('Pitch (adjust it with O and P while building)'),
                values = pitchHelper.getPitchParamValues(),
                defaultIndex = pitchHelper.getDefaultPitchParamValue(),
                uiType = 'SLIDER'
            }
        },
        autoRemovable = false, -- Used to allow the construction to be removed, if it collides with something else.
        skipCollision = true,
        updateFn = function(params)
            local result = {
                colliders = { },
                cost = 0,
                edgeLists = { },
                groundFaces = { },
                labelText = {
                    [0] = { _('ReplaceWithNewer'), _('ReplaceWithNewer') }
                },
                models = {
                    {
                        id = 'lollo_assets/icon/red_w_message.mdl',
                        transf = { 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1 }
                    }
                },
                terrainAlignmentLists = { },
            }

            return result
        end,
        upgradeFn = function(_)
            return {}
        end
    }
end
